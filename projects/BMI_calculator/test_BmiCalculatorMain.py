# ********RoostGPT********
"""
Test generated by RoostGPT for test python-5768-test2 using AI Type  and AI Model 

ROOST_METHOD_HASH=main_2e91109ffc
ROOST_METHOD_SIG_HASH=main_105191a9d8


BEGIN_GUIDELINE

```
Scenario 1: Test with valid height and weight
Details:
  TestName: test_valid_bmi_calculation
  Description: This test is intended to verify that the BMI calculation and interpretation is correct when valid height and weight are given.
Execution:
  Arrange: Initialize height and weight with valid float values.
  Act: Invoke the calculate_bmi function with prepared height and weight, and pass the result to interpret_bmi function.
  Assert: Check the result is as expected according to the BMI classification.
Validation:
  This test is important to ensure the main business logic of BMI calculation and interpretation works correctly with valid inputs.

Scenario 2: Test with zero height
Details:
  TestName: test_zero_height
  Description: This test is intended to verify that the function handles the ZeroDivisionError correctly when height is zero.
Execution:
  Arrange: Initialize height as zero and weight with a valid float value.
  Act: Invoke the calculate_bmi function with prepared height and weight, and pass the result to interpret_bmi function.
  Assert: Check the result is "Invalid input. Height should be greater than 0."
Validation:
  This test is important to ensure the function can handle unexpected inputs and raise appropriate error messages.

Scenario 3: Test with negative height or weight
Details:
  TestName: test_negative_height_or_weight
  Description: This test is intended to verify that the function handles the ValueError correctly when height or weight is negative.
Execution:
  Arrange: Initialize height or weight as a negative number.
  Act: Invoke the calculate_bmi function with prepared height and weight.
  Assert: Check the ValueError is raised.
Validation:
  This test is important to ensure the function can handle unexpected inputs and raise appropriate error messages.

Scenario 4: Test with non-numeric height or weight
Details:
  TestName: test_non_numeric_input
  Description: This test is intended to verify that the function handles the ValueError correctly when non-numeric inputs are given.
Execution:
  Arrange: Initialize height or weight as a non-numeric value.
  Act: Invoke the calculate_bmi function with prepared height and weight.
  Assert: Check the ValueError is raised.
Validation:
  This test is important to ensure the function can handle unexpected inputs and raise appropriate error messages.

Scenario 5: Test the reference chart function
Details:
  TestName: test_reference_chart
  Description: This test is intended to verify that the reference chart function can read the csv file correctly and print the chart.
Execution:
  Arrange: Prepare a csv file 'bmi.csv'.
  Act: Invoke the reference_chart function.
  Assert: Check the printed chart is as expected.
Validation:
  This test is important to ensure the reference chart function works correctly, providing necessary reference information for users.
```
END_GUIDELINE
"""

# ********RoostGPT********
pip install tabulate
